<?xml version="1.0" encoding="UTF-8"?>
<tei xmlns="http://www.tei-c.org/ns/1.0">
<teiHeader>
<fileDesc xml:id="_1"/>
<encodingDesc>
<appInfo>
<application version="0.8.1-SNAPSHOT" ident="GROBID" when="2024-06-24T14:20+0000">
<ref target="https://github.com/kermitt2/grobid">A machine learning software for extracting information from scholarly documents</ref>
</application>
</appInfo>
</encodingDesc>
</teiHeader>
<text xml:lang="en">
<p>Sustainability considerations in manufacturing scheduling, which is traditionally influenced by service oriented performance metrics, have rarely been adopted in the literature. This paper aims to address this gap by incorporating energy consumption as an explicit criterion in shop floor scheduling. Leveraging the variable speed of machining operations leading to different energy consumption levels, we explore the potential for energy saving in manufacturing. We analyze the trade-off between minimizing makespan, a measure of service level and total energy consumption, an indicator for environmental sustainability of a two-machine sequence dependent permutation flowshop. We develop a mixed integer linear multi-objective optimization model to find the Pareto frontier comprised of makespan and total energy consumption. To cope with combinatorial complexity, we also develop a constructive heuristic for fast trade-off analysis between makespan and energy consumption. We define lower bounds for the two objectives under some non-restrictive conditions and compare the performance of the constructive heuristic with <rs xml:id="12895891" type="software">CPLEX</rs> through design of experiments. The lower bounds that we develop are valid under realistic assumptions since they are conditional on speed factors. The Pareto frontier includes solutions ranging from expedited, energy intensive schedules to prolonged, energy efficient schedules. It can serve as a visual aid for production and sales planners to consider energy consumption explicitly in making quick decisions while negotiating with customers on due dates. We provide managerial insights by analyzing the areas along the Pareto frontier where energy saving can be justified at the expense of reduced service level and vice versa.</p>
<p>Scarcity and likely future shortages of key materials and energy resources used in modern manufacturing have come into the focus of public interest. This challenge necessitates resource-efficient engineering, as the transition from a linear to a circular economy has already begun (Sun, 2013). We need innovative resource-efficient and low-carbon economy solutions for conserving resources, maximizing recovery of materials, reusing, and recycling as well as minimizing waste to respond to and pro-actively prepare for significant scientific and technological challenges of sustainable manufacturing. Manufacturers feel the pressures of public awareness of sustainability, increasing energy costs, and growing energy security concerns. Therefore a new line of research has been rapidly developing for the reduction of energy and power consumption in manufacturing without compromising service levels.</p>
<p>Sustainable manufacturing is substantiated by concepts such as conservation of energy, material and value added products, waste prevention and environment protection. The manufacturing industry as a whole uses massive amounts of energy and contributes to 36% of global CO 2 emissions (OECD-IEA, 2007). In the UK, industry's energy consumption accounts for 16% of the total consumption (MacLeay, Harris, &amp; Annut, 2014). This is equivalent to 194 million metric tonnes of CO 2 . To put this figure into perspective, it corresponds to greenhouse gas emissions from 451 million barrels of oil (EPA 2013). Moreover, according to the Department of Energy &amp; Climate Change (DECC), the total demand for energy in the UK was slightly above the total supply in 2012 (DECC, 2013), which resulted in importing energy to satisfy the demand. Although the current oil prices suggest an abundance of resources for energy, the increasing trend in population, energy consumption and wastage of energy puts the world at risk of facing an energy crisis in the near future as is evidenced by the European Union's developing contingency plans against any kind of energy supply outage (Reuters, 2015). This is why manufacturing companies are obliged to not only make efforts to reduce their environmental impact but also to proactively consider likely energy shortages in their operations. One way to do this is by using highly effective ways of reducing their electrical energy consumption (Duflou et al., 2012). Examples of such ways include selectively shutting down machines during idle time (Mouzon &amp; Yildirim, 2008;Mouzon, Yildirim, &amp; Twomey, 2007) where feasible or operating them at speeds allowed by the set service level targets.</p>
<p>Our research is novel in its integration of energy considerations into the shop floor scheduling. We leverage variable processing times with different energy consumptions to analyze the trade-off between makespan and energy consumption in a two-machine sequence dependent flowshop scheduling problem. Our research is inspired in part by similar trade-offs between speed and fuel emissions in vehicle routing (Demir, Bekta ¸s, &amp; Laporte, 2014;Jabali, Woensel, &amp; de Kok, 2012) and maritime transportation (Psaraftis &amp; Kontovas, 2013;Qi &amp; Song, 2012). We argue that in flowshop manufacturing, there is a trade-off between optimizing makespan (which is dependent on processing and setup times) and energy consumption. Therefore, analyzing the trade-offs in an efficient way can support decision making when scheduling manufacturing operations in this setting. To the best of our knowledge, this problem has not been addressed in the extant literature. This paper aims to close this gap in an attempt to promote the notion of green scheduling in manufacturing.</p>
<p>In this paper we address the trade-off between energy consumption and service level in shop floor manufacturing. We develop a mathematical model to minimize makespan, a measure of service level and total energy consumption, an indicator of environmental sustainability in a two-machine permutation flowshop scheduling problem that is characterized by sequence dependent setups. Twomachine flowshop scheduling problems have many real world applications including metalworking (Uruk, Gultekin, &amp; Akturk, 2013), printed circuit board (PCB) manufacturing (Sabouni &amp; Logendran, 2013) and shampoo industry (Belaid, T'kindt, &amp; Esswein, 2012) among others. As a result, two-machine scheduling problems have attracted significant attention from practitioners and researchers. From the 1950s when Johnson developed one of the first algorithms for twomachine flowshop scheduling (Johnson, 1954), the problem has been widely studied in the literature from different perspectives. A recent search on Scopus 1 using the keywords "scheduling OR sequencing" AND "flowhsop OR 'flow shop' " AND "two-machine" found more than 630 articles. More interestingly, we observed that more than 50% of these research papers have been published in the last 10 years, which shows a growing attention to this problem in recent years. These types of problems are observed in industrial applications (e.g. metal processing, brake manufacturing and electronics), finance, information processing, health care, cosmetics, and satellite imaging, where it is essential to explicitly consider the setup times in scheduling the production/service systems because of their significant impact on operational costs (Gharbi, Ladhari, Msakni, &amp; Serairi, 2013). Scheduling problems with sequence-dependent setups have attracted attention from many researchers due to their importance to industry and because of the challenges they present to solution methodologies (Zhu &amp; Wilhelm, 2006). Examples of sequence-dependent scheduling problems can be found in metalworking (Baghaei, 2013), furniture manufacturing (Agnetis, Detti, Meloni, &amp; Pacciarelli, 2001) and paint shops (Mansouri, 2005).</p>
<p>Energy consumed during manufacturing depends on power, processing time, and machine-specific properties such as operating speed. The transition to more energy-efficient processes will require substantial investment and a change of mindset. If the ideas presented in this paper are taken up by the scheduling practitioners 1 Conducted on 27 July 2015.</p>
<p>in the manufacturing sector, it will be possible to make decisions including both service level and environmental considerations in sectors such as electronics (Trovinger &amp; Bohn, 2005), paper (Pinedo, 2012) and textiles (Clark, Almada-Lobo, &amp; Almeder, 2011). An aspect of these ideas that may be appealing to scheduling practitioners is that they are process-oriented; they do not require huge investments in machine redesign or product redesign, which may be very difficult for small and medium-sized enterprises. Considering the high pressure on the environment from fossil-based energy sources, reducing energy consumption on the shop floor is attractive to manufacturers not only environmentally but also economically as well. That is why an increasing number of scientists are working on saving energy and reducing carbon emissions in manufacturing operations (Liu, Zhang, Yang, Chen, &amp; Huang, 2013). The contributions of this paper can be summarized as follows:</p>
<p>• introducing the concept of green scheduling as a new approach to shop floor scheduling; • developing a novel multi-objective mathematical model, taking into account energy consumption as an explicit decision criterion by leveraging variable processing times; • defining lower bounds on total energy consumption and makespan for benchmarking; • developing a new heuristic algorithm to find a good approximation of Pareto optimal solutions in a short amount of time; • validating the performance of the heuristic algorithm through comprehensive experiments and benchmarking with <rs xml:id="12895892" type="software">CPLEX</rs> based on three performance metrics: accuracy, diversity and cardinality of the Pareto frontiers; • providing the managerial implications of green scheduling for production planners and sales managers of manufacturing companies.</p>
<p>The remainder of the paper is organized as follows. Section 2 reviews the relevant literature. Section 3 develops the mathematical model and the lower bounds for the two objectives. The constructive heuristic is described in Section 4. The experimental setup is presented in Section 5, followed by the presentation and discussion of results in Section 6. Finally, Section 7 concludes the paper and identifies future research directions.</p>
<p>Energy consumption and carbon footprint have rarely been considered explicitly in the literature on shop floor scheduling. There have been a few conceptual research papers in recent past in an attempt to incorporate such metrics with conventional performance indicators for shop floor manufacturing (e.g. makespan, total tardiness, mean lateness, combined earliness-tardiness and total flow time in Mokotoff, 2010). Recently, Zhang, Zhao, Fang, and Sutherland (2014) considered energy cost and carbon footprint under varying energy price based on the time of use. The traditional scheduling literature assumes fixed processing times for operations with some exceptions in parallel and hybrid flowshop scheduling problems (e.g. Behnamian &amp; Fatemi Ghomi, 2011). However, Ding, Song, and Wu (2015) considered variable processing speeds in a permutation flowshop scheduling problem. It is therefore realistic to assume variable machine speeds since Ahilan, Kumanan, Sivakumaran, and Dhas (2013) showed that the processing time and energy consumption of CNC machines can vary significantly by changing cutting speed, feed rate, depth of cut and nose radius. As a result, relaxing the assumption of fixed processing time provides the opportunity to save energy by extending processing times or to improve customer service level by shortening processing times.</p>
<p>Our study brings together two lines of literature: sustainable manufacturing and multi-criteria decision making. Within the sustainable manufacturing literature, we focus on energy considerations in scheduling, specifically in sequence dependent flowshop scheduling. The main objective of sustainable manufacturing is to lower the environmental impact linked to manufacturing (Despeisse, Ball, &amp; Evans, 2012). There are both economic and environmental benefits associated with sustainable manufacturing, due to energy reduction and waste minimization. Research on embedding energy considerations into scheduling is rather limited. In a recent work, Ding et al. (2015) considered machine speed and energy consumption whilst minimizing makespan. Indeed, the authors called for an extension of their model to accommodate machine setup times since they cannot be ignored in many production environments (Ding et al., 2015). Among the existing work, Mouzon et al. (2007) proposed several dispatching rules and a multi-objective mathematical programming formulation for scheduling jobs on a single CNC machine so as to minimize energy consumption and total completion time. This work focused on turning machines off at idle times to save energy but did not consider energy savings during machine operation. In a subsequent work, Mouzon and Yildirim (2008) developed a metaheuristic algorithm that minimizes two conflicting objectives of total energy consumption and total tardiness on a single machine using multiobjective optimization. This work also focused on turning machines off during idle times to minimize energy and total tardiness, but energy consumption during machine operation was not addressed.</p>
<p>Fang, Uhan, Zhao, and Sutherland (2011) developed a multiobjective mixed integer linear programming formulation including completion time and energy considerations with a varying operation speed on a single machine. They included operation speed as an independent variable that can be changed to affect the peak load and energy consumption. Although they studied a flowshop environment with two machines, they did not consider setup times, which have a direct impact on the makespan. In a similar work, Fang, Uhan, Zhao, and Sutherland (2012) studied the permutation flowshop problem with peak power consumption constraints using a mixed integer programming formulation. They did not consider setup times but they considered both discrete and continuous processing speeds. On the other hand, most practical problems involve both setup considerations and multiple objectives (Cheng, Gupta, &amp; Wang, 2000). An extensive review of the scheduling literature on models with setup times (costs) can be found in Allahverdi, Ng, Cheng, and Kovalyov (2008). We refer the readers to Yenisey and Yagmahan (2013) for a state-of-the-art literature review of the permutation flowshop scheduling problem that is drawing an increasing interest over time, with specific focus on contemporary heuristic algorithms.</p>
<p>A relatively less studied area is the lower bounds for scheduling with setup times. Gharbi et al. (2013) developed lower bounds for the two-machine flowshop scheduling with sequence independent setup times based on waiting time-based relaxation, the single machinebased relaxation, and the Lagrangian relaxation. They suggested hybridizing the single machine-based and the Lagrangian relaxationbased lower bounds for sequence-dependent problems.</p>
<p>Complementary to the work of Mouzon and Yildirim (2008) and Fang et al. (2012), Liu et al. (2013) analyzed energy consumption in permutation flowshop scheduling in two phases: during machine operation and machine idling. They developed a branch-and-bound algorithm based on the NEH Heuristic (Nawaz, Enscore, &amp; Ham, 1983) to solve the permutation flowshop problem with idle energy minimization. Different from our study, their objective was to minimize the total wasted energy consumption as the weighted sum of idle times on each machine. Diaz, Redelsheimer, and Dornfeld (2011) showed that machining time dominates energy demand and specific energy consumption of a machine tool is affected by the processing speed. Similarly, for parallel machine scheduling problems in the computing field, energy consumed increased with higher execution speeds of processors (Fang &amp; Lin, 2013), where jobs executed at a higher machine speed for time saving incurred a greater energy cost. In parallel, Ahilan et al. (2013) developed neural networks to predict machining parameters on CNC turning machines. In an experimental design, they examined the effect of turning parameters (cutting speed, feed rate, depth of cut and nose radius) on power consumption and surface roughness. They were able to develop a non-linear parametric equation to estimate power consumption based on various levels of machining parameters and found a positive relationship between power consumption and cutting speed, feed rate and depth of cut. This power consumption estimation could then be used in scheduling problems that consider power consumption explicitly, such as those studied by Mouzon et al. (2007); Fang et al. (2011); Liu et al. (2013), or this study.</p>
<p>Energy consumption and its associated cost is also studied by considering aspects that are outside the decision space of the manufacturer, such as peak and off-peak times set by energy providers. In line with this, Luo, Du, Huang, Chen, and Li (2013) studied machine electricity consumption costs in a hybrid metalworking flowshop. They used constant power/speed ratios in order to optimize the electricity consumption by machines during peak and off-peak hours and recommended combining fast and slow operating machines to achieve higher energy efficiency.</p>
<p>Minimizing energy consumption is desirable not only for cost minimization purposes but also for environmental sustainability. Gong and Zhou (2013) approached this problem from the emissions trading viewpoint, where they built optimal emissions trading and production policies for a manufacturer who could choose between a green and a regular production technology. They found that the optimal technology selection is determined by the relationship between the additional cost per energy consumption allowance saved and the trading prices, whereas in other cases it also relies on the allowance level of energy consumption.</p>
<p>To summarize, minimizing energy consumption in manufacturing is a multifaceted issue related to machining parameters, specificities of operations, the nature of the problem at hand, and external variables. New capabilities of advanced manufacturing technologies that allow processes to be executed at variable speeds and different energy consumption levels highlight the need for considering energy consumption in scheduling explicitly.</p>
<p>We address a two-machine permutation flowshop scheduling problem with sequence dependent setup times where machines have variable speed. Based on the recommendations made by Ibrahimov, Mohais, Schellenberg, and Michalewicz (2014) we build a model that is representative of reality with reasonable assumptions and approximations. The general flowshop scheduling problem consists of n jobs that are to be processed on m machines sequentially with fixed, nonnegative processing time for all jobs (Tiwari, Chang, Tiwari, &amp; Kollanoor, 2014). Setup times are anticipatory, i.e. a setup can be started before the corresponding job becomes available on the machine. We adapt Graham's three-field notation (α|β|γ ) (Graham, Lawler, Lenstra, &amp; Kan, 1979) for scheduling problems (T'kindt &amp; Billaut, 2006). The α field describes the shop (machine) environment. The β field describes the setup information, other shop conditions, and details of the processing characteristics. Finally, the γ field contains the objective to be minimized. The two-machine flowshop scheduling problem to minimize makespan (or C max ) and total energy consumption with sequence-dependent setup times is denoted as F2|ST sd |C max , TEC. We refer to this problem as Problem P in this paper. Problem P is NP-hard because the single objective problem F2|ST sd |C max is known to be NP-hard (Gupta &amp; Darrow, 1986a). Table 1 introduces the indexes, parameters and variables used in the mathematical modeling of Problem P. We first provide basic definitions of multi-objective optimization in Section 3.1. Sequence dependent setup time for changing from job j to job k on machine i (for j = k, s ijj denotes the setup time for job j if it is the first job in the sequence) λ</p>
<p>Conversion factor for processing speed</p>
<p>Conversion factor for idle time on machine i π i</p>
<p>A very large number (set to 1,000,000)</p>
<p>Completion time of job j on machine i o j</p>
<p>Setup offset for job j on the second machine (in case j is the first job in the sequence)</p>
<p>The makespan, the completion time of the last job on the last machine TEC Total energy consumption Binary variables</p>
<p>1 if job j is processed at speed on machine i, 0 otherwise</p>
<p>A Multi-objective Optimization Problem (MOP) seeks to determine a vector of decision variables within a feasible region to minimize a vector of objective functions that usually conflict with each other. Without the loss of generality, an MOP can take the form:</p>
<p>where x is the vector of decision variables and is the set of feasible solutions. A decision vector x is said to dominate a decision vector ỹ (also written as x ỹ) if and</p>
<p>for a problem with all objectives to be minimized. All feasible solutions that are not dominated by any other feasible solution are called non-dominated or Pareto-optimal. These are solutions for which no objective can be improved without at least one other objective being deteriorated.</p>
<p>Among the most common approaches to solve MOPs are: sequential optimization, weighting method, -constraint method, goal programming, goal attainment, and distance-based and direction-based methods (Collette &amp; Siarry, 2004). Scheduling with respect to multiple decision criteria is indeed an MOP. Readers are referred to T'kindt and Billaut (2006) for a comprehensive survey on the theory and applications of multi-objective scheduling.</p>
<p>We present the mixed integer programming model with objectives of minimizing C max and minimizing TEC in Eqs. 1-13.</p>
<p>(1)</p>
<p>(2) Subject to:</p>
<p>(5)</p>
<p>We follow a 'TSP-like' approach for constructing a feasible schedule for the two machine sequence dependent setup problem as an extension to the work of Gupta (1986) and Gupta and Darrow (1986b). The objective Functions 1 and 2 seek, respectively, to minimize C max (or makespan) as a measure of service level and TEC, a sustainability metric. Since we assume anticipatory setups, Constraint 3 calculates the setup offset duration for the first job to ensure that the completion time on machine 2 is delayed. Constraint 4 determines the completion time of the first job on machine 1. Constraint 5 warrants the completion time of jobs on machine 2 as greater than or equal to the completion time on the first machine plus their processing time in the second machine. Constraint 6 ensures that the completion times of successive jobs are in an increasing order in such a way that it accounts for setup changeover and completion time of the preceding job. Note that with Constraints 5 and 6, the completion time of a job on machine 2 is determined as its processing time on machine 2 plus the maximum of its completion time on machine 1 and setup time for changing over from its predecessor job in machine 2. C max is calculated in Constraint 7 as the completion time of the last job on machine 2. Constraint 8 warrants that there is only one first job. Constraint 9 guarantees that exactly one speed factor is selected for each job. The feasibility of the sequence is maintained by Constraints 10 and 11 which produce a sequence of jobs. Note that the decision variable ζ j determines the first job in the tour and all the completion time calculations are done accordingly. It should be noted that Constraint 6 is only binding for consecutive jobs, which are defined by x jk decision variables. For non consecutive jobs, this constraint will be non-binding because of the presence of the big M. In our model, the last job is paired with the first job and the completion time for the last job is unaffected by the relation because of the big M in Constraint 6. Idle times on the machines are calculated by Constraint 12. Constraint 13 computes TEC in kilowatt hour. Finally, Constraint 14 represents the nonnegativity and binary constraints for the decision variables. The total number of variables in the model is n 2 + 9n + 3 and the total number of constraints are 6n 2 + 14n + 7.</p>
<p>To demonstrate the conflict between minimizing C max and TEC, we solved a small problem with six jobs through -constraint approach using
<rs xml:id="12895893" type="software">CPLEX</rs>
<rs xml:id="12895894" type="version" corresp="12895893">12.5</rs>. In this approach, minimizing C max was considered the objective and TEC as a constraint. In this example, processing speed factor was v = {1.2, 1, 0.8} for processing at fast, normal, and slow speeds, respectively. The conversion factor, which we used to approximate the energy consumed during the operation, was λ = {1.5, 1, 0.6} for fast, normal, and slow processing speeds, respectively.
</p>
<p>The two machines had the same power (π 1 = π 2 = 60 kw) with the same conversion factor for idle times (ϕ 1 = ϕ 2 = 0.05). Processing times at normal speed and setup times for each job on each machine are given in Table 2. Fig. 1 represents the Pareto optimal frontier. It shows that optimal C max and TEC are found in two different schedules as an evidence that Objectives 1 and 2 cannot be optimized simultaneously and therefore a multi-objective optimization approach must be adopted.</p>
<p>In this section we develop lower bounds for the two objectives, namely C max and TEC of P. In order to do this, we define a sequence independent sub-problem and use its properties to develop lower bounds for Problem P, which was defined in Section 3. machine i in Problem P si is computed as follows:</p>
<p>The single objective version of problem P si can be solved in polynomial time using Yoshida &amp; Hitomi's (1979) algorithm. This algorithm is an extension to Johnson's (1954) algorithm for two machine flowshop scheduling to minimize C max with sequence independent setups. Definition 2. S σ,ṽ and S σ,ṽ si denote the solutions for Problems P and P si respectively with sequence σ and speed vector ṽ. The corresponding objective vectors of these solutions are represented by: (S σ,ṽ → C max , S σ,ṽ → T EC) and (S σ,ṽ si → C max , S σ,ṽ si → T EC) respectively (where x → y should be read 'y of x').</p>
<p>Definition 4. Optimal objective values of problems P and P si are denoted by: (P → C * max , P → TEC * ) for problem P and (P si → C * max , P si → TEC * ) for problem P si .</p>
<p>Lemma 1. For any sequence σ and speed vector ṽ, C max of problem P si is less than or equal to the C max of Problem P. In other words S σ,ṽ si → C max ≤ S σ,ṽ → C max .</p>
<p>Proof. Let [k] denote the job in position k of the sequence σ . Considering Eq. ( 15), we have:</p>
<p>Knowing that C max is a regular (non-decreasing) objective function (Koulamas &amp; Kyparisis, 2005), it can be concluded that S σ,ṽ si → C max ≤ S σ,ṽ → C max .</p>
<p>Corollary 1. Minimum C max in problem P si (or P si → C * max ) is achieved when jobs are processed according to speed vector ṽ1 (i.e. fast speed) in which v ik = v 1 ∀i, k. In other words: P si → C * max = S σ * , ṽ1 si → C max where σ * represents the optimal sequence in problem P si found by Yoshida &amp; Hitomi's (1979) Proof. From Lemma (1) we can see that</p>
<p>max which concludes the proof.</p>
<p>Lemma 3. For any sequence σ and speed vector ṽ, we have S σ,ṽ si → T EC ≤ S σ,ṽ → T EC.</p>
<p>Proof. It is known that the processing energy requirement of solutions S σ,ṽ and S σ,ṽ si are equal. The difference between the energy consumption of the two solutions is due to the likely difference between their idle energy consumption. Solution S σ,ṽ si has less idle time compared to S σ,ṽ because minimum setup times have been considered in Problem P si (see Eq. 15). Therefore it can be concluded that: S σ,ṽ si → T EC ≤ S σ,ṽ → T EC.</p>
<p>Proof. Let τ * t denote the optimal sequence that minimizes TEC in problem P. It is obvious that P → TEC ≥ P → TEC * . According to</p>
<p>the conditions set out for λ 's and ϕ i 's. We know that processing energy consumption could be reduced by changing elements of speed vector ṽ, from v 1 to v 2 and from v 2 to v 3 . However, such speed alterations will prolong jobs' processing times and possibly increase idle times. As such, saving in processing energy is likely to increase idle energy consumption. To guarantee that speed alterations will not increase TEC, it is necessary to make sure that the saving in processing energy compensates for (i.e. is greater than or equal to) the increase in idle energy consumption. For operations on machine 1, any speed reduction for J 1[k] will affect idle time before J 2[k] on the second machine. The resultant extra idle time will be equal to the difference in the processing time of J 1 [k] . The maximum amount of extra idle time will be observed when there is no idle time before J 2 [k] . Meanwhile, if the idle time before J 2[k] is less than the extension in processing time of J 1 [k] , the extra idle time on machine 2 will be less than maximum, but in this case, C max is likely to be increased, which in turn increases the idle time on machine 1. In all cases, the maximum idle time that is possible to be added on both machines will be equal to the extended processing time of J 1 [k] . On the other hand, speed reduction on machine 2 may affect C max and thereby, idle time after completion of the last job on machine 1. Extending the processing time of J 2[k] could increase C max up to the difference in the processing time of J 2 [k] . In order for the saved energy in processing to compensate for the increased idle energy consumption, it is sufficient that:</p>
<p>). These conditions could be unified as:</p>
<p>Under this condition we will have:</p>
<p>It should be noted that the conditions stated in Lemma 4 are not restrictive in practice as the idle energy consumption factors of ma-chine tools are usually much less than the difference between processing energy conversion factors. For instance, for a problem involving a small (15kw) and a large (75kw) CNC machine, with typical conversion factors λ = {1.3, 1.0, 0.72} (Ahilan et al., 2013) and conversion factors for idle energy consumptions φ = {0.05, 0.05} (Mouzon et al., 2007), we can observe that the condition is easily satisfied: min{(1.3 --1.0) × 15, (1.3 --1.0) × 75, (1.0 --0.72) × 15, (1.0 --0.72) × 75} = 4.2 &gt; max{0.05 × 15, 0.05 × 75} = 3.75.</p>
<p>As discussed earlier in Section 3, Problem P is NP-hard and therefore exact optimization methods are not applicable to solve medium and large sized instances. In this section we develop a constructive heuristic to find an approximation of Pareto frontier of Problem P in reasonable time. The constructive heuristic includes a scheduling procedure (called Schedule Development Heuristic -SDH) and a local search, which are executed iteratively on all possible speed vectors. For a given speed vector, the scheduling heuristic SDH constructs a near-optimal sequence with respect to C max . For this heuristic, we adapted the idea of the dominance rules proposed by Gupta and Darrow (1986a) for single speed two-machine sequence dependent flowshop scheduling to minimize C max and extended them to account for variable speeds of Problem P defined in Section 3. As detailed in Algorithm 1 , the SDH procedure is implemented in four main steps. At the beginning, all search parameters are initialized in Step 0. The jobs are then sequenced in Step 1 using the speed vector ˜ = δ i j , i = 1, 2; j = 1, . . . , n, where δ ij denotes the processing speed factor of job j on machine i; δ i j ∈ {v 1 , v 2 , v 3 } representing fast, normal and slow speeds, respectively. In each iteration, one job is selected from the set of jobs that are not sequenced (represented by ω) and placed at the end or beginning of partial sequences σ 1 or σ 2 respectively. This continues until (n -1) jobs are attached to partial sequences σ 1 or σ 2 . In Step 2, the final sequence is created as σ 1ω-σ 2 , where ω includes only one job at this stage. The jobs are then scheduled according to the sequence σ and speed vector ˜ in Step 3. The start and finish times for all jobs on both machines are calculated in this step. Finally, a local search is carried out in Step 4 to improve the quality of the solution (see Algorithm 2). Starting from the beginning of the sequence, the local search examines whether removing jobs from their position and inserting them in subsequent positions could improve C max . In an iterative procedure, the first job is examined for insertion in (n -1) subsequent positions and inserted in the best position that results in maximum reduction in C max or remained in its current position if its move doesn't lead to any improvement in C max . The second job is then examined for insertion in the (n -2) subsequent positions and so on and so forth. Based on a given vector of processing speed factors, the SDH schedules the jobs and calculates C max and TEC. The Constructive Heuristic (CH) seeks energy efficient schedules in an iterative loop. It starts with an initial schedule in which all jobs are run at the fast speed. In the iterative loop, jobs are selected at a time with the shortest processing time for speed reduction by one level (i.e. from fast to normal and from normal to slow). The SDH (Algorithm 1) is then run to obtain an efficient solution. Algorithm 3 provides details of the CH.</p>
<p>In practical manufacturing environment, the scale of scheduling problems is generally large (Zhang &amp; Wu, 2010). We used the design of experiments to derive valid statistical inferences from the experimental observations. We designed our experiments to generate sequence dependent Taillard-based problem sets as is frequently studied in the literature (Ruiz, Maroto, &amp; Alcaraz, 2005;Ruiz and Stützle, 2008;Vallada and Ruiz, 2011).</p>
<p>Algorithm 1: The schedule development heuristic SDH. input : vector of jobs processing speed factors on the two machines output: schedule S with near optimal C max and its associated T EC begin</p>
<p>Step 0 (initialization) let σ 1 and σ 2 be two partial sequences; d the last job in σ 1 and e the first job in σ 2 ; let n 1 and n 2 denote the number of jobs in σ 1 and σ 2 respectively; let ω denote the set of jobs not included in σ 1 and σ 2 ; let δ i j denote the processing speed factor of job j on machine i; δ i j ∈ {v 1 , v 2 , v 3 }; let ˜ denote the vector of speed factors, ˜ = δ i j , i = 1, 2; j = 1, . . . , n;</p>
<p>let J [k] denote the job in k th position of the sequence;</p>
<p>Step 1 (sequencing) find job a such that</p>
<p>The data required for a F2|ST sd |C max , TEC problem consist of the number of jobs (n), processing times of each job on each machine (p ij ), setup times for changing over from job j to job k on each machine i (s ijk ), processing speeds (v ) and the energy consumption conversion factor corresponding to them (λ ), machines' power consumption (π i ), and idle time conversion factor on each machine (ϕ i ). Conversion factors are parameters that convert time (processing and idle) to energy depending on speed. Table 3 summarizes our experimental setting with the relevant references we used as the basis for setting values of the parameters. We generated 30 instances to test performance of the algorithms for each job level and setup level. This resulted in 4 × 4 × 30 = 480 instances.</p>
<p>In Table 3, we based the number of jobs in our experiments on previous flowshop scheduling research by Naderi, Zandieh, and Roshanaei (2009). Following from the classical problem introduced by Taillard (1990) and revisited by Ruiz et al. (2005) we used uniformly distributed processing times in the experiments. In order to gain insights about the impact of setup times, we followed the 'setup to processing time ratio' investigated by Ruiz and Stützle (2008). We took the idle time energy consumption parameter from Mouzon et al. (2007). The work of Ahilan et al. (2013) was instrumental to estimating processing speed and the corresponding energy conversion rate, which followed lognormal distribution for each processing speed.</p>
<p>In accordance with Lemma 4 and also with the works of Ahilan et al. (2013) and Mouzon et al. (2007), each problem set in the data set satisfied the condition: Step 0 (Initialization)</p>
<p>set iterator ρ = 0; initialize the speed vector at fast speed ˜ ρ : δ i j = v 1 ; ∀i, j;</p>
<p>Step</p>
<p>run SDH (Algorithm 1) using speed vector ρ , let S ρ denote the resultant schedule; if S ρ is not dominated by then set = ∪ S ρ ; end update O ns , let ρ = ρ + 1; end end report set .</p>
<p>Evaluating the performance of multi-objective algorithms has been the subject of debate among researchers. Interested readers may refer to Okabe, Jin, and Sendhoff (2003) for a critical overview of the most common approaches to performance evaluation in multiobjective optimization. In this research, we used four metrics to compare the performance of the solution techniques: distance with the lower bound (DLB), diversity (DVR), spacing (SPC), and cardinality (CRD) of the final frontier found by each algorithm.</p>
<p>DLB measures the solution quality of the Pareto frontier i.e. how close the solutions on the Pareto frontier are to the lower bound of the problem, whereas DVR, SPC and CRD reflect the spread and size of the frontier respectively. A frontier with small DLB would be of limited practical use if it is spread in a very small region (low DVR and/or SPC) with a limited number of solutions (low CRD). In contrast, a diverse Pareto frontier (with high DVR and/or SPC) and several solutions (high CRD) will provide more flexibility for trade-off analysis by decision makers to chose preferred solutions from a wider set. The accuracy of Pareto frontier is measured by its distance with lower bound, denoted by DLB and calculated as follows:</p>
<p>where C LB max and TEC LB are lower bounds for C max and TEC respectively defined in Section 3.4. The diversity of Pareto frontier is denoted by DVR , which represents the area covered by the objective values, i.e product of the ranges for C max and TEC:</p>
<p>In addition to DVR, we measure the spread of solutions along the Pareto frontier using the spacing metric (SPC) as follows (Tan, Goh, Yang, &amp; Lee, 2006):</p>
<p>where d ξ is the Euclidan distance between solution ξ and its clos- (Tan et al., 2006).</p>
<p>Finally, the number of solutions in the frontier is considered as the measure of cardinality of the Pareto frontier denoted by CRD :</p>
<p>The constructive heuristic was coded in <rs xml:id="12895895" type="language">C++</rs> and run on an Intel Xeon CPU 3.50 GHz with 32.0 GB RAM under
Windows 7 Enterprise. Moreover, we used
<rs xml:id="12895896" type="software">CPLEX</rs>
<rs xml:id="12895897" type="version" corresp="12895896">12.5</rs> in <rs xml:id="12895925" type="software">Concert Technology</rs> to code the MILP model in <rs xml:id="12895898" type="language">C++</rs>. Graphs and statistical analyses were performed on a MacBook Pro with Intel Core i7 2.2 GHz processor and OS X version 10.9.3 running
<rs xml:id="12895899" type="software">RStudio</rs> version
<rs xml:id="12895900" type="version" corresp="12895899">0.97.551</rs> and
<rs xml:id="12895901" type="language">R</rs> version
<rs xml:id="12895902" type="version" corresp="12895901">3.0.3</rs>. For fair comparison, we first solved all problems using CH and then allowed <rs xml:id="12895903" type="software">CPLEX</rs> to run under -constraint for at least the same time that CH had spent on that problem size. Our experiments showed that allowing <rs xml:id="12895904" type="software">CPLEX</rs> to run for 7n seconds for a problem with n jobs gives <rs xml:id="12895905" type="software">CPLEX</rs> comparable time to that of CH. To allow for exploration of the Pareto frontier and to avoid spending too much time at any level, we set a limit for 10% of the total time for each level before proceeding with the reduced value. Incidentally, in deciding on the time spent at each stage, there is a trade-off among the three performance metrics, i.e. DLB, DVR, and CRD. More time at any given level would allow <rs xml:id="12895906" type="software">CPLEX</rs> to improve DLB but at the expense of less iterations and hence lower DVR and lower CRD. We examined a number of values and observed that 10% provides a fair opportunity for exploration and exploitation of the search space at the same time. The best solution found at each stage was archived and ultimately filtered to obtain the set by removing dominated solutions.
</p>
<p>We solved 30 instances of small problems (4-6 jobs) to optimality using the parameter settings in Table 3. This helped demonstrate the quality of the constructive heuristic in comparison to problems where true Pareto frontiers could be found using exact optimization. Moreover, the true Pareto frontiers could serve a basis for assessing tightness of the lower bounds developed in Section 3.4. We produced 30 instances for small and large problems; for each n and each Setup, this resulted in a total of (3 + 4) × 4 × 30 = 840 problem instances.</p>
    <p>The total number of replications, 30, provided a statistical power of 0.862 at the significance level of 0.01 that can detect even a small effect size (0.20) as suggested by Cohen (1992). This power is comparable to the power in Shin &amp; Benton's (2004) study. For power calculation, we used <rs xml:id="12895899A" type="software">G * Power</rs> <rs xml:id="12895899B" type="version" corresp="12895899A">3</rs> (Faul, Erdfelder, Lang, &amp; Buchner, 2007).</p>
<p>Table 4 presents the mean and the standard deviation of the DLB as a percentage. As the 'setup to processing time ratio' increases, the average DLB increases. Part of the gap is due to the factors that affect problem complexity, and part of it could be due to looseness of the lower bound, which is defined in a conservative way; for each job, it takes the shortest setup time from job k to job j. Then, it uses the Yoshida &amp; Hitomi's (1979) algorithm to find C max . When the 'setup to processing time ratio' is low, the lower bound is closer to the optimal solution. So for problem sets with a larger 'setup to processing time' ratio, the lower bound becomes much farther from the optimal solution.</p>
<p>Fig. 2 shows the CPU usage of <rs xml:id="12895907" type="software">CPLEX</rs> for small problems. The exponential increase in CPU time is visible in problems with even 4-6 jobs. We can also see the exponential growth in the <rs xml:id="12895908" type="software">CPLEX</rs>'s solution time.</p>
<p>Fig. 3 presents the comparison of DLB, DVR, SPC and CRD for small jobs together with the exponential increase in the average time required to solve the problems with 4, 5, and 6 jobs.</p>
<p>We chose a full factorial design in which we tested the following combinations:</p>
<p>• Number of jobs. Four levels: 20, 50, 80, 120.</p>
<p>• Setup to processing time ratio. Four levels: U(1, 25), U(1, 50), U(1, 99), U(1, 125).</p>
<p>• Algorithms. Two levels: CH and <rs xml:id="12895909" type="software">CPLEX</rs>.</p>
<p>Table 5 summarizes the mean and standard deviation of the DLB achieved by CH and <rs xml:id="12895910" type="software">CPLEX</rs> for the same problem instances. Fig. 4 shows that variation of setup time has an impact on the DLB. Increasing setup time variation degrades the accuracy. However n does not affect the DLB as much, particularly for the CH algorithm as can be seen in Table 5, for the same Setup to processing time distribution, the average DLB for each n is around the same figure; e.g. for Setup to processing ratio of 25% the minimum average DLB is 12.64% and the maximum average DLB is 12.86%. It should be noted that the lower bound developed in Section 3.4 is rather conservative. Small problems solved to optimality have a DLB of approximately 9.5% (see Table 4). As such, part of the distances with lower bound (DLB) reported in Table 5 could be attributed to the looseness of the lower bound to gain a more realistic idea of the performance of the solution methods. It should be noted that the true Pareto frontiers in our problem are unknown for large-even medium-sized problem instances and cannot be found using exact optimization methods. As a result, both CH and <rs xml:id="12895911" type="software">CPLEX</rs> (with limited execution time) find approximations of true Pareto frontiers.</p>
<p>To compare DVR of the two solution approaches, we first calculate the 'nominal diversity' of each approach using Eq. 19. The 'nominal diversity' figures are then normalized using Eq. 22 for a given solution method (SM) where SM ∈ {<rs xml:id="12895912" type="software">CPLEX</rs>, CH} for each problem instance. We report the mean and standard deviation of the diversity as a percentage in Table 6 and Fig. 5 for CH and <rs xml:id="12895913" type="software">CPLEX</rs> for the same problem instances.</p>
<p>Table 7 and Fig. 6 report the performance of the CH and <rs xml:id="12895914" type="software">CPLEX</rs> in terms of the spacing metric. Spacing is influenced by both the number of jobs and the setup times for the CH. The heuristic shows better SPC for problems with larger setup to processing time ratios. In the meantime, <rs xml:id="12895915" type="software">CPLEX</rs> performs better in terms of spacing when the setup to processing time ratio is smaller. Overall, CH performs better in terms of SPC compared to <rs xml:id="12895916" type="software">CPLEX</rs>.</p>
<p>Table 8 and Fig. 7 report the number of non-dominated solutions found by the CH algorithm and the <rs xml:id="12895917" type="software">CPLEX</rs> for the same problem instances. Cardinality is influenced by the number of jobs. The larger the problem is, the more solutions both the CH and the <rs xml:id="12895918" type="software">CPLEX</rs> can find. CH was able to find more solutions in less time. However, these solutions should be interpreted under the light of the diversity as well.</p>
<p>Table 8 suggests that CRD decreases as the setup to processing time ratio increases. When the role of setup in total completion time is significant, the number of alternative solutions becomes more restricted.</p>
<p>We compare the performance of CH and <rs xml:id="12895919" type="software">CPLEX</rs> on the four performance metrics (DLB, DVR, SPC, and CRD) using the non-parametric Wilcoxon signed rank test instead of the paired Student's t-test because the metrics were not normally distributed for each level of n and each level of Setup. We report the mean rank difference in the respective performance followed by the probability that this difference is different from zero in parentheses. In these comparisons we assumed a significance level of 0.01. Table 9 shows the comparison of DLB, DVR, SPC and CRD performance of <rs xml:id="12895920" type="software">CPLEX</rs> and CH. In terms of DLB, CH performs worse than <rs xml:id="12895921" type="software">CPLEX</rs> only for problems with 20 jobs under the setup to processing time ratio of 25%. In terms of DVR, CH performs better than <rs xml:id="12895922" type="software">CPLEX</rs> in all cases. In terms of SPC, there is no difference between CH and <rs xml:id="12895923" type="software">CPLEX</rs> for problems with 20, 80 and 120 jobs under setup to processing time ratio of 25% and also for problems with 20 jobs under setup to processing time ratio of 50%. In terms of CRD, CH performs better than <rs xml:id="12895924" type="software">CPLEX</rs> in all cases.</p>
<p>We conducted two-way ANOVA on DLB, DVR, and CRD performance of CH to reach further insights about the effect of n, the ef-fect of Setup and the interaction between n and Setup. We report the source of variation in performance (Source), degrees of freedom (Df), sum of squares (SS), mean squares (MS), F statistic (F), and the probability that the F statistic is greater than the critical F (Pr(&gt;F)). Similar to the t-tests, we used a significance level of 0.01. Table 10 shows the two-way ANOVA with n (4) × Setup (4) conducted on DLB, DVR, SPC, and CRD.</p>
<p>It was found that n did not have a statistically significant impact on DLB with F (3, 464) = 0.06 and p = 0.983. Setup had a statistically significant impact on DLB with F (3, 464) = 26.62 and p = 0.000. The interaction was not statistically significant, with F (9, 464) = 0.15 and p = 0.998. In terms of the impact on DVR, n had a statistically significant impact with F (3, 464) = 431.33 and p = 0.000. Setup on the other hand did not have a statistically significant impact on DVR with F (3, 464) = 0.19 and p = 0.904. The interaction was not statistically significant, with F (9, 464) = 0.18 and p = 0.996. When the ANOVA was done for the SPC, it was found that n with F (3, 464) = 22.96 and p = 0.000, Setup with F (3, 464) = 235.29 and p = 0.000, and the interaction term with F (9, 464) = 5.02 and p = 0.000 had a statistically significant impact. Finally, n had a statistically significant impact on CRD with F (3, 464) = 231.58 and p = 0.000. Setup also had a statistically significant impact on CRD with F (3, 464) = 239.46 and p = 0.000. The interaction was also statistically significant, with F (9, 464) = 13.674 and p = 0.000. Fig. 8 presents the main effects plots of n and Setup for DLB, DVR, SPC and CRD of CH.</p>
<p>To demonstrate the application of the concept of green scheduling in providing managerial insight, we solve two problems with 20 jobs as examples of medium size problems with different setup to processing time ratios using the CH developed in this paper. Fig. 9 illustrates the Pareto frontiers of these problems, called 'a' and 'b'. Problem 'a' has a setup to processing time ratio of 99% whereas the same ratio in problem 'b' is 125%.</p>
<p>The Pareto frontier of problem 'a' includes 29 non-dominated schedules found by the CH in 12.81 seconds. The solutions along the frontier range from a1 with 2,637 kilowatt hours energy consumption for completion of the jobs in 1,983 minutes, to a29 which can complete the jobs with 1,911 kilowatt hours within 2,435 minutes. From solution a1 to a29, there is 27.5% potential for energy saving at the cost of 22.8% longer makespan. On average, 1.61 kilowatt hour energy could be saved per minute of extended completion time. This index can provide insight to sales and production managers for fast trade-off analysis between energy consumption and service level in negotiation with customers on a range of service levels when due date is not fixed (Yue, Xia, Tran, &amp; Chen, 2009). There are areas along the frontier with potential for energy saving and areas for faster delivery without compromising too much on the environmental impact of operations. For instance, moving from a9 to a10 can save more than 43 kilowatt hours at the expense of only 0.08 minute delay. Also, significant saving in energy can be achieved by transition from a17 to a18. A slight 13 minutes increase in C max in this transition will save 168kilowatt hours energy. On the other hand, transition from schedule a20 to schedule a19 will reduce makespan by 41 minutes and increases energy consumption by only 3 kilowatt hours. Such information is also valuable for production managers to realize areas for enhancing customer service when it is possible, with minimal impact on carbon footprint of manufacturing.</p>
<p>The Pareto frontier of Problem 'b' was found in 12.71 seconds. Compared to problem 'a', it offers less potential for energy saving. As can be seen, there is marginal difference between b1 with T EC = 1, 884 kilowatt hours and C max = 1, 765 minutes to b27 with T EC = 1, 767 kilowatt hours and C max = 2, 483 minutes. From b1 to b27, only 6.2% energy could be saved at the expense of 55.7% longer completion time. The average potential for energy saving is 0.16 kilowatt hours per minute. In this problem, customer service could be DLB 20 0.018 (0.042) -0.052 (0.000) -0.053 (0.000) -0.052 (0.000) 50 -0.046 (0.000) -0.082 (0.000) -0.082 (0.000) -0.083 (0.000) 80 -0.066 (0.000) -0.096 (0.000) -0.089 (0.000) -0.078 (0.000) 120 -0.081 (0.000) -0.096 (0.000) -0.094 (0.000) -0.082 (0.000) All -0.048 (0.000) -0.081 (0.000) -0. .000 (0.000) 28.000 (0.000) 22.500 (0.000) 19.000 (0.000) 50 66.000 (0.000) 49.000 (0.000) 36.000 (0.000) 32.500 (0.000) 80 84.000 (0.000) 58.500 (0.000) 40.000 (0.000) 39.000 (0.000) 120 97.500 (0.000) 67.500 (0.000) 50.000 (0.000) 42.500 (0.000) All 71.000 (0.000) 51.000 (0.000) 37.000 (0.000) 33.000 (0.000) significantly improved by moving from right to left along the Pareto frontier with minor increments in energy consumption. As an example, choosing schedule b25 instead of b26, will lead to 168 minutes faster delivery at the expense of only 10 kilowatt hours extra energy consumption.</p>
<p>As it can be seen, the trade-off between C max and TEC can differ significantly from problem to problem. The difference could be expressed using the shadow price of respective objectives (Balbás, Galperin, &amp; Guerra, 2005). For example in problem 'a' and from the TEC point of view, the shadow price of TEC when moving from schedule a10 to a9 is 0.0018 minutes per kilowatt hour. On the other hand and from the C max standpoint, the shadow price of moving from By exploring the shadow prices of Pareto optimal schedules with respect to C max and TEC, the high impact moves on either objective could be identified.</p>
<p>This paper addresses the sequence dependent two-machine permutation flowshop scheduling problem with service level and energy consumption concerns bridging the sustainable manufacturing and multi-criteria decision making literature. A mathematical model incorporating machine running speed is developed to explicitly consider energy saving by considering alternative processing times. Since it is not possible to solve this mathematical model in a reasonable time frame for medium-and large-sized problem instances, a constructive heuristic is developed to assist shop floor operations managers in their daily scheduling problems.</p>
<p>The theoretical contribution of this paper is threefold. First, we develop a mathematical model that combines the two major concerns in the shop floor: service level and energy consumption. Using variable speed and anticipatory setup times, the model aims to minimize both C max and TEC which are conflicting in nature. Second, although the lower bound we developed for this model is conservative, it is still informative for it is applicable to all problems with various ratios of setup to processing time. A possible venue for extending our work is to tighten this lower bound. Third, we develop a constructive heuristic that runs within acceptable time frame especially with large problems that are not uncommon in real life. There is still room for improving this heuristic further in terms of its running speed and solution quality. Extending the current mathematical model to m-machine permutation flowshop problem with the same pair of objectives and developing efficient solution methods to find good approximations of Pareto frontiers for large problem instances is another interesting area for future research.</p>
<p>In terms of managerial implications of this work, production planners can use this model and the heuristic algorithm to make a tradeoff between C max and TEC. This trade-off is likely to prove more useful in particular when setup times of the problems are smaller than the processing times. This includes for instance, the sequencing of the paint shop in mixed model assembly lines as one of the most energy consuming operations in car manufacturing, with significant potential for reducing the environmental impact of the automotive industry (Hope, 2014). In our experimentation we explained key observations regarding the parameters that might influence the efficiency and effectiveness of the solution methods. It would be a relevant extension to explain the behavior of the solution methods by interpreting the underlying reasons for the difference in their performance. Another relevant problem is the scheduling of machine shops to minimize peak power consumption. This will have not only an economic return but also an environmental benefit through reducing carbon emissions by decreasing the need for electric power across the manufacturing sector. An extension to this aspect could consider other service-oriented performance metrics.</p>
<p>input : schedule S output: schedule S with likely reduced C max</p>
<p>ρ ; let S ρ denote the resultant schedule; let [k] denote the job in position k of S ρ and o i</p>
<p>[k]</p>
<p>the operation in position k on machine i; if S ρ is not dominated by (i.e.</p>
<p>S μ ∈ | S μ S ρ ) then set = ∪ S ρ k [p i[k] /δ i[k] ];</p>
<p>update ρ by decreasing the speed of operation o i[ξ ] by one level (i.e.</p>
</text>
</tei>